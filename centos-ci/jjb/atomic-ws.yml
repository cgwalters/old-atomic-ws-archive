- job:
    name: atomic-ws-rdgo
    node: atomic-sig-ci-slave01 
    triggers:
      - github
      - timed: "H/30 * * * *"

    defaults: atomic-ws-defaults

    builders:
      - macro-cciskel-duffy-prepared-allocate:
          jobclass: builder
          duffytimeoutsecs: 3600
          playbook: atomic-ws/centos-ci/setup/setup-system.yml
      - shell: |
          #!/bin/bash
          set -xeuo pipefail

          (echo -n "export RSYNC_PASSWORD=" && cat ~/duffy.key | cut -c '-13') > rsync-password.sh

          rsync -q -Hrlptv --stats -e ssh workstation-ostree-config rsync-password.sh builder@${DUFFY_HOST}:
          build_success=true
          if ! ssh -tt builder@${DUFFY_HOST} ./atomic-ws/centos-ci/run-rdgo-rsync; then
            build_success=false
          fi
          rsync -q -Hrlptv --stats -e ssh builder@${DUFFY_HOST}:build-logs $WORKSPACE/build-logs || true
          # Exit with code from the build
          if test "${build_success}" = "false"; then
            echo 'Build failed, see logs above'; exit 1
          fi
            
    publishers:
      - archive:
          artifacts: 'build-logs/**'
          allow-empty: 'true'
      - macro-cciskel-duffy-deallocate

- job-template:
    name: 'atomic-ws-{task}'
    node: atomic-sig-ci-slave01 
    triggers:
      - github
      - timed: "H H/3 * * *"

    defaults: atomic-ws-defaults

    builders:
      - macro-cciskel-duffy-prepared-allocate:
          jobclass: builder
          duffytimeoutsecs: 3600
          playbook: atomic-ws/centos-ci/setup/setup-system.yml
      - shell: |
          #!/bin/bash
          set -xeuo pipefail
          (echo -n "export RSYNC_PASSWORD=" && cat ~/duffy.key | cut -c '-13') > rsync-password.sh
          rsync -Hrlptv --stats -e ssh atomic-ws rsync-password.sh builder@${{DUFFY_HOST}}:
          ssh -tt builder@${{DUFFY_HOST}} ./atomic-ws/centos-ci/run-{task}
            
    publishers:
      - macro-cciskel-duffy-deallocate

# create the jobs using the job templates
- project:
    name: atomic-ws
    task:
      - treecompose
      - installer
    jobs:
      - atomic-ws-rdgo
      - 'atomic-ws-{task}'
